- name: coyote
  title: uring-3u-tests

- name: Status ( Pre-Conditions )
  entries:
    - name: GET /status on leader with id 1
      command: curl -vs --stderr - http://localhost:9081/status
      stdout_has:
        - HTTP/1.1 200 OK
        - Leader
    - name: GET /status on follower with id 2
      command: curl -vs --stderr - http://localhost:9082/status
      stdout_has:
        - HTTP/1.1 200 OK
        - Follower
    - name: GET /status on follower with id 3
      command: curl -vs --stderr - http://localhost:9083/status
      stdout_has:
        - HTTP/1.1 200 OK
        - Follower

- name: KV store on leader
  entries:
    - name: Get non-existent key/value on leader
      command: curl -vs --stderr - http://localhost:9081/kv/phantom
      stdout_has:
        - HTTP/1.1 404 Not Found

    - name: Put fresh key/value on leader
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9081/kv/beep --data-binary "{\"value\": \"boop\"}"
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Put idempotent key/value on leader
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9081/kv/beep --data-binary '{"value": "boop"}'
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Get key/value on leader
      command: curl -vs --stderr - http://localhost:9081/kv/beep
      stdout_has:
        - HTTP/1.1 200 OK
        - "beep"
        - "boop"

- name: KV store on follower with id 2
  entries:
    - name: Get non-existent key/value on node 2
      command: curl -vs --stderr - http://localhost:9082/kv/phantom
      stdout_has:
        - HTTP/1.1 404 Not Found

    - name: Put fresh key/value on node 2
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9082/kv/beep --data-binary "{\"value\": \"boop\"}"
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Put idempotent key/value on node 2
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9082/kv/beep --data-binary '{"value": "boop"}'
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Get key/value on node 2
      command: curl -vs --stderr - http://localhost:9082/kv/beep
      stdout_has:
        - HTTP/1.1 200 OK
        - "beep"
        - "boop"
    - name: CAS fresh key/value on node 2
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9082/kv/meep2/cas --data-binary "{\"store\": \"snot\"}"
      stdout_has:
        - HTTP/1.1 201 Created
    - name: CAS idempotent key/value on node 2
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9082/kv/beep/cas --data-binary '{"check": "boop", "store": "snot"}'
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Get key/value on node 2
      command: curl -vs --stderr - http://localhost:9082/kv/meep2
      stdout_has:
        - HTTP/1.1 200 OK
        - "meep"
        - "snot"

- name: KV store on follower with id 3
  entries:
    - name: Get non-existent key/value on node 3
      command: curl -vs --stderr - http://localhost:9083/kv/phantom
      stdout_has:
        - HTTP/1.1 404 Not Found

    - name: Put fresh key/value on node 3
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9083/kv/fleek --data-binary "{\"value\": \"boop\"}"
      stdout_has:

- name: KV store on follower with id 3
  entries:
    - name: Get non-existent key/value on leader
      command: curl -vs --stderr - http://localhost:9083/kv/phantom
      stdout_has:
        - HTTP/1.1 404 Not Found

    - name: Put fresh key/value on node 3
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9083/kv/fleek --data-binary "{\"value\": \"boop\"}"
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Put idempotent key/value on node 3
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9083/kv/fleek --data-binary '{"value": "boop"}'
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Get key/value on node 3
      command: curl -vs --stderr - http://localhost:9083/kv/fleek
      stdout_has:
        - HTTP/1.1 200 OK
        - "fleek"
        - "boop"
    - name: CAS fresh key/value on node 3
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9083/kv/meep3/cas --data-binary "{\"store\": \"snot\"}"
      stdout_has:
        - HTTP/1.1 201 Created
    - name: CAS idempotent key/value on node 3
      command: |
        curl -vs --stderr - -H "Content-type: application/json" http://localhost:9083/kv/fleek/cas --data-binary '{"check": "boop", "store": "snot"}'
      stdout_has:
        - HTTP/1.1 201 Created
    - name: Get key/value on leader
      command: curl -vs --stderr - http://localhost:9083/kv/meep3
      stdout_has:
        - HTTP/1.1 200 OK
        - "meep"
        - "snot"

- name: Status ( Post-Conditions )
  entries:
    - name: GET /status on leader with id 1
      command: curl -vs --stderr - http://localhost:9081/status
      stdout_has:
        - HTTP/1.1 200 OK
        - Leader
    - name: GET /status on follower with id 2
      command: curl -vs --stderr - http://localhost:9082/status
      stdout_has:
        - HTTP/1.1 200 OK
        - Follower
    - name: GET /status on follower with id 3
      command: curl -vs --stderr - http://localhost:9083/status
      stdout_has:
        - HTTP/1.1 200 OK
        - Follower

